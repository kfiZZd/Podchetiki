<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tabPage1.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>